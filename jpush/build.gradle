plugins {
    id 'com.android.library'
    /*maven*/
    id 'maven-publish'
    id 'com.github.dcendents.android-maven'
}

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        manifestPlaceholders = [
                JPUSH_PKGNAME: rootProject.ext.android["applicationId"],
                // JPush 注册包名对应 AppKey
                JPUSH_APPKEY : rootProject.ext.jpush["jpushAppKey"],
                // 暂默值即可
                JPUSH_CHANNEL: rootProject.ext.jpush["jpushChannel"],
        ]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [JPUSH_CHANNEL: name]
    }
    compileOptions {
        sourceCompatibility rootProject.ext.compileOptions["sourceCompatibility"]
        targetCompatibility rootProject.ext.compileOptions["targetCompatibility"]
    }
}

// Because the components are created only during the afterEvaluate phase,
// you must configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = rootProject.ext.jitpack["groupId"]
                artifactId = rootProject.ext.jitpack["artifactId"]
                version = rootProject.ext.jitpack["version"]
            }
            // Creates a Maven publication called “debug”.
            debug(MavenPublication) {
                // Applies the component for the debug build variant.
                from components.debug

                groupId = rootProject.ext.jitpack["groupId"]
                artifactId = rootProject.ext.jitpack["artifactId"]
                version = rootProject.ext.jitpack["version"]
            }
        }
    }
}

dependencies {
    implementation project(path: ':util')
    /*util*/
    implementation 'cn.jiguang.sdk:jcore:3.2.4'
    /*jCore*/
    api 'cn.jiguang.sdk:jpush:4.7.2'
    /*极光推送*/
}