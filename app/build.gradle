plugins {
    id 'com.android.application'
}

/*Safe Args*/
apply plugin: "androidx.navigation.safeargs"

// MobSDK 插件
apply plugin: 'com.mob.sdk'
// MobSDK 扩展
MobSDK {
    // 严格模式
    // 终端用户接受隐私条款前 MobSDK 不进行任何操作
    fp true
    // 注册 SMSSDK 相关信息
    SMSSDK {
        // 默用 GUI（不用下关）
        gui false
        // 打开短信本机号验证功能（3.7.0+）
        // 独用短信才需通开关打开短信本机号验证功能
        // 同用秒验和短信，默支持短信本机号验证功能，无需也不可通开关打开（类冲突）
        mobileAuth true
    }
}

android {
    signingConfigs {
        debug {
            storeFile file('../SignatureFile/debug.keystore')
            storePassword 'android'
            keyPassword 'android'
            keyAlias = 'androiddebugkey'
        }
    }
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]

    defaultConfig {
        applicationId "com.example.chaos"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86'//,'x86_64','mips','mips64'
        }
        resConfigs "en", "zh"
        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                // JPush 注册包名对应 AppKey
                JPUSH_APPKEY : rootProject.ext.jpush["jpushAppKey"],
                // 暂默值即可
                JPUSH_CHANNEL: rootProject.ext.jpush["jpushChannel"],
        ]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
            buildConfigField "String", "DOMAIN_NAME", '"http://xxx.com"'
            manifestPlaceholders = [app_name: "混沌（开发版）"]
            versionNameSuffix "-debug"
        }
    }
    compileOptions {
        sourceCompatibility rootProject.ext.compileOptions["sourceCompatibility"]
        targetCompatibility rootProject.ext.compileOptions["targetCompatibility"]
    }
}

dependencies {
    implementation project(path: ':pool')
    /*chaos*/
    implementation 'com.jakewharton:butterknife:10.2.3'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'
    /*ButterKnife*/
    debugImplementation 'com.glance.guolindev:glance:1.0.0'
    /*glance*/
    debugImplementation 'io.github.didi.dokit:dokitx:3.5.0'
    // 核心模块
    debugImplementation 'io.github.didi.dokit:dokitx-ft:3.5.0'
    // 文件同步模块
    debugImplementation 'io.github.didi.dokit:dokitx-mc:3.5.0'
    // 一机多控模块
    debugImplementation 'io.github.didi.dokit:dokitx-weex:3.5.0'
    // weex 模块
    releaseImplementation 'io.github.didi.dokit:dokitx-no-op:3.5.0'
    // no-op 模块
    // 仅 release 环境需引 no-op
    // 否则插件注入相关代码致找不到对应 class
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.8.1'
    /*LeakCanary*/
}